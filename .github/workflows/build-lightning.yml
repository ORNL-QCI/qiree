# Build directly on the GitHub runner with caching
name: build-lightning
on:
  workflow_dispatch:
  workflow_call:

concurrency:
  group: build-lightning-${{github.ref}}-${{github.event.pull_request.number || github.run_number}}-${{github.workflow}}
  cancel-in-progress: true

jobs:
  linux:
    name: ${{matrix.runner}}-${{matrix.compiler}}-${{matrix.version}}-llvm${{matrix.llvm}}
    strategy:
      matrix:
        include:
          - runner: jammy
            compiler: gcc
            version: 12
            llvm: 14
          - runner: jammy
            compiler: clang
            version: 15
            llvm: 15
    runs-on: >-
      ${{  matrix.runner == 'focal' && 'ubuntu-20.04'
        || matrix.runner == 'jammy' && 'ubuntu-22.04'
        || null
      }}
    env:
      CCACHE_DIR: "${{github.workspace}}/.ccache"
      CCACHE_MAXSIZE: "10G"
      CC: ${{matrix.compiler}}-${{matrix.version}}
      CXX: ${{matrix.compiler == 'gcc' && 'g++' || 'clang++'}}-${{matrix.version}}
    steps:
      - uses: actions/setup-python@v5
        name: Install Python
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          sudo apt-get -q -y update
          sudo apt-get -q -y install \
            ccache cmake ninja-build libgtest-dev \
            llvm-${{matrix.llvm}}-dev \
            ${{matrix.compiler}}-${{matrix.version}} \
            ${{matrix.compiler == 'gcc' && format('g++-{0}', matrix.version) || ''}}
          echo "Installed toolchain:"
          ld --version | head -1
          $CC --version | head -1
          $CXX --version | head -1
          llvm-config-${{matrix.llvm}} --version | head -1
          python -m pip install pennylane-lightning
      - name: Check out
        uses: actions/checkout@v4
      - name: Set up ccache
        uses: actions/cache@v4
        with:
          path: ${{env.CCACHE_DIR}}
          key: ccache-${{matrix.runner}}-${{matrix.compiler}}-${{matrix.version}}-${{github.run_id}}
          restore-keys: ccache-${{matrix.runner}}-${{matrix.compiler}}-${{matrix.version}}
      - name: Zero ccache stats
        run: |
          ccache -z
      - name: Configure
        run: |
          export LIGHTNING_SIM_PATH=$(python -c "import site; print( f'{site.getsitepackages()[0]}/pennylane_lightning')")/liblightning_qubit_catalyst.so
          mkdir build && cd build
          cmake -GNinja \
            -DQIREE_GIT_DESCRIBE="${{github.event.pull_request
              && format(';-pr.{0};', github.event.pull_request.number)
              || format(';-{0};', github.ref_name)}}" \
            -DQIREE_BUILD_TESTS:BOOL=ON \
            -DQIREE_DEBUG:BOOL=ON \
            -DQIREE_USE_XACC:BOOL=OFF \
            -DQIREE_USE_LIGHTNING:BOOL=ON \
            -DCMAKE_BUILD_TYPE="Release" \
            -DCMAKE_INSTALL_PREFIX="${{github.workspace}}/install" \
            -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
            -DCMAKE_CXX_FLAGS="-Wall -Wextra -pedantic" \
            ..
      - name: Build all
        working-directory: build
        run: |
          ninja
      - name: Run tests
        working-directory: build
        run: |
          ctest --parallel 2 --timeout 15 --output-on-failure
      - name: Install
        working-directory: build
        run: |
          ninja install
      - name: Show ccache stats
        run: |
          ccache -s

# vim: set nowrap tw=100:
